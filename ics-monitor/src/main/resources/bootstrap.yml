server:
  port: 8084

mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.ics.cloud.common.model

auth-server: http://localhost:8082

spring:
  application:
    name: ics-monitor
  cloud:
    nacos:
      config:
        server-addr: 120.92.44.197:8848
      discovery:
        server-addr: ${spring.cloud.nacos.config.server-addr}
    sentinel:
      transport:
        dashboard: localhost:8888
      eager: true
      datasource.ds.nacos:
        server-addr: ${spring.cloud.nacos.config.server-addr}
        dataId: ${spring.application.name}-sentinel
        groupId: DEFAULT_GROUP
        ruleType: flow
  datasource:
    url: jdbc:mysql://localhost:3306/inc?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT
    username: root
    password: admin
    driver-class-name: com.mysql.cj.jdbc.Driver
    druid:
      initial-size: 5
      min-idle: 5
      maxActive: 20
      maxWait: 60000
      timeBetweenEvictionRunsMillis: 60000
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      filters: stat,wall
      connectionProperties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
      web-stat-filter:
        enabled: true
        url-pattern: "/*"
        exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"
      stat-view-servlet:
        url-pattern: "/druid/*"
        allow:
        deny:
        reset-enable: false
        login-username: admin
        login-password: 123456
  mvc:
    static-path-pattern: /static/**
    view:
      prefix: /views/
      suffix: .html
    resources:
      static-locations: classpath:/static/
  http:
    encoding:
      charset: utf-8
      force: true
      enabled: true
  redis:
    database: 0
    host: 127.0.0.1
    port: 6379
    password:
    jedis:
      pool:
        max-idle: 8
        min-idle: 10
        max-active: 100
        max-wait: -1
    timeout: 10000
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest


security:
  oauth2:
    client:
      client-id: ${spring.application.name}
      client-secret: 123456
      user-authorization-uri: ${auth-server}/oauth/authorize
      access-token-uri: ${auth-server}/oauth/token
      grant-type: authorization_code,password,refresh_token
      scope: all
    resource:
      token-info-uri: ${auth-server}/oauth/check_token
      id: ${spring.application.name}
      jwt:
        key-uri: ${auth-server}/oauth/token_key

management.endpoints.web.exposure.include: "*"

logging:
  level:
    com.ics.cloud: debug
#    org.springframework.web: debug
#    org.springframework.security: DEBUG
  file: log/${spring.application.name}/log.log

